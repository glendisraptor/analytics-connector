services:
  # PostgreSQL for application data
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: analytics_connector
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for analytics data
  postgres-analytics:
    image: postgres:15
    environment:
      POSTGRES_DB: analytics_data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_analytics_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - FLASK_APP=app:app
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:admin@postgres:5432/analytics_connector
      - ANALYTICS_DATABASE_URL=postgresql://postgres:admin@postgres-analytics:5432/analytics_data
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-super-secret-key
      - ENCRYPTION_KEY=your-encryption-key-32-chars-long
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      postgres-analytics:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: flask run --host=0.0.0.0 --port=8000

  # Flower monitoring UI for backend Celery
  flower:
    image: mher/flower:1.2.0
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
    ports:
      - "5555:5555"

  # React frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - backend

  # Apache Superset
  superset:
    build:
      context: ./superset
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_CONFIG_PATH=/app/superset_config.py
      - SUPERSET_SECRET_KEY=your-superset-secret-key
    volumes:
      - ./superset/superset_config.py:/app/superset_config.py
    depends_on:
      postgres-analytics:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Admin --lastname User --email admin@example.com --password admin &&
        superset init &&
        superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
      "

volumes:
  postgres_data:
  postgres_analytics_data:
  redis_data:
